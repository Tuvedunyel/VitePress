import fs from 'node:fs'
import { fileURLToPath } from 'node:url'
import path from 'node:path'
import { favicons } from 'favicons'

const fileName = fileURLToPath(import.meta.url)
const dirName = path.dirname(fileName)

/**
 * Get config from json file !
 * @returns object
 */
const getconfig = () => {
  return JSON.parse(fs.readFileSync(`${dirName}/../config/favicon.json`, 'utf8'))
}

// find theme dir name
export function getThemDir() {
  const themPath = process.cwd().split('/')
  return themPath[themPath.length - 1]
}

const config = await getconfig()

// directory target for assets generated
const iconDir = config.iconsDir || 'public'
// logo source
const source = config.source
// directory for build
const target = `./${iconDir}/`
// php file to include to head
const phpHead = `${dirName}/../inc/pwa_head.php`
// tag filter to remove
const removeList = [
  'mobile-web-app-capable',
  'apple-mobile-web-app-capable',
  // 'manifest',
]

const configuration = {
  path: `/wp-content/themes/${getThemDir()}/${iconDir}`,
  appName: config.manifest.appName,
  appShortName: config.manifest.appShortName,
  appDescription: config.manifest.appDescription,
  background: config.manifest.background,
  theme_color: config.manifest.theme_color,
  lang: config.manifest.lang,
  appleStatusBarStyle: 'default', // Style for Apple status bar: "black-translucent", "default", "black". `string`
  display: 'standalone', // Preferred display mode: "fullscreen", "standalone", "minimal-ui". `string`
  orientation: 'any', // Default orientation: "any", "natural", "portrait" or "landscape". `string`
  // scope: '/',
  start_url: '/',
  preferRelatedApplications: config.manifest.preferRelatedApplications,
  pixel_art: config.manifest.pixel_art,
  loadManifestWithCredentials: config.manifest.loadManifestWithCredentials,
  manifestMaskable: config.manifest.manifestMaskable,
  icons: {
    favicons: config.manifest.icons.favicons,
    android: config.manifest.icons.android,
    appleIcon: config.manifest.icons.appleIcon,
    appleStartup: config.manifest.icons.appleStartup,
    coast: config.manifest.icons.coast,
    yandex: config.manifest.icons.yandex,
    windows: config.manifest.icons.windows,
  },
  shortcuts: [],
  output: {
    images: true,
    files: true,
    html: true,
  },
}

try {
  // delete dist
  fs.rmSync(target, { recursive: true, force: true })
  console.log(`${target} is deleted!`)

  // create dist directory
  fs.mkdirSync(target)
  console.log(`${target} is created.`)

  const response = await favicons(source, configuration)

  // create manifest file
  if (response.files.length > 0) {
    const manifest = response.files[0].contents
    fs.writeFileSync(`${target}manifest.webmanifest`, manifest)
  }

  // create images
  response.images.map((image) => {
    fs.writeFileSync(`${target}${image.name}`, image.contents)
  })

  // head generated
  const head = response.html

  // remove element from removeList
  for (const l of removeList) {
    const index = head.findIndex((e) => e.includes(l))
    if (index) {
      head.splice(index, 1)
    }
  }

  // create head for include in page
  fs.writeFileSync(
    phpHead,
    `<?php
    /**
     * I'm a file generated by the script faviconGenerator.mjs in core folder.
     * Don't touch me because a change on next launch script command ;)
     */
    add_action('wp_head', function () {
    echo '${head.join('')}';
    });
  `
  )
} catch (error) {
  console.log(error.message)
}
